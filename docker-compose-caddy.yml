version: '3.9'

services:
  caddy:
    image: caddy:2-alpine
    container_name: hostgame-caddy
    restart: unless-stopped
    ports:
      - "${CADDY_HTTP_PORT:-80}:80"
      - "${CADDY_HTTPS_PORT:-443}:443"
      - "${CADDY_ADMIN_PORT:-2019}:2019"  # Caddy admin API (선택사항)
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - APP_PORT=${APP_PORT:-3000}
    networks:
      - hostgame-network
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Docker Desktop에서 호스트 접근용

  # NestJS 앱 (선택사항 - 같은 docker-compose에서 실행할 경우)
  # app:
  #   build: .
  #   container_name: hostgame-app
  #   restart: unless-stopped
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3000
  #   volumes:
  #     - ./uploads:/app/uploads
  #   networks:
  #     - hostgame-network
  #   depends_on:
  #     - redis

  # Redis (기존 docker-compose.yml에서 가져온 경우)
  redis:
    image: redis:7
    container_name: hostgame-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - hostgame-network

volumes:
  caddy_data:
  caddy_config:
  caddy_logs:
  redis_data:

networks:
  hostgame-network:
    driver: bridge