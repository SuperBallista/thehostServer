상태동기화 아키텍처 정리

클라이언트의 스벨트 Store와 서버의 Redis 데이터 값을 동기화하는 규칙
동기화 방법
웹소켓 통신은 송신 이벤트(request)와 수신 이벤트는(update)만 각각 1개만 열어서 이 이벤트를 통해 모든 이벤트 전달

웹소켓으로 전달받는 내용을 미리 객체 프로퍼티로 할당해놓고
전달받은 내용에서 해당 프로퍼티가 존재할 때 그 값을 store에 업데이트하도록 별도의 함수 파일로 작성하기
ex) update로 전달받은 내용은 객체의 프로퍼티로 nickname, id, status 등등을 모두 가질 수 있고 없을 수도 있음.
그러나 여기서 status값을 받으면 status만 store에서 set해서 변경하는 것을 기본으로 함

+ 레디스 pub/sub이 필요한데 여기서 publish로 업데이트 요청할 때는 internal 이런식으로 보내고 message 안은 업데이트 가능한 상태명을 ENUM 형태로 타입으로 만들어 쓰고 각각 지정 후 배열에 담아서 통신